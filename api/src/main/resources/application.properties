# Server config
server.port=${SERVER_PORT:8080}
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force-response=true
spring.mvc.problemdetails.enabled=true

# Management
management.server.port=${MANAGEMENT_SERVER_PORT:8081}
management.endpoints.web.exposure.include=health,prometheus

# Logging
logging.level.root=info
spring.output.ansi.enabled=always
spring.jpa.properties.hibernate.format_sql=true

# Migrations config
spring.liquibase.enabled=true
spring.liquibase.contexts=timescale
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

# Datasource config
spring.datasource.hikari.maximum-pool-size=${DB_MAX_CONNECTIONS:20}
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:application}
spring.datasource.username=${DB_USERNAME:#{null}}
spring.datasource.password=${DB_PASSWORD:#{null}}

spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.javax.persistence.validation.mode=none
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Cache configuration
spring.cache.type=redis
spring.cache.cache-names=currency,currency_info
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}

cache.eviction-rate=10000

# Swagger configuration
springdoc.api-docs.path=${OPENAPI_URL:/_docs/api}
springdoc.swagger-ui.path=${SWAGGER_URL:/_docs/ui}
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# rate limit
bucket4j.enabled=true
bucket4j.cache-to-use=redis-springdata
bucket4j.filters[0].cache-name=api-limits
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].url=/api/.*
bucket4j.filters[0].http-response-body={ "status": 429, "message": "Too many requests" }
bucket4j.filters[0].metrics.enabled=true
bucket4j.filters[0].metrics.tags[0].key=IP
bucket4j.filters[0].metrics.tags[0].expression=getRemoteAddr()
bucket4j.filters[0].strategy=first
bucket4j.filters[0].rate-limits[0].cache-key=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].refill-speed=greedy
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=${MAX_REQUESTS_PER_MINUTE:60}
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
